[versions]
#Kotlin
kotlin = "2.2.21"
ksp = "2.3.0"

# Android
android-sdk-tools = "36.0.0"
android-sdk-min = "24"
android-sdk-compile = "36"
android-sdk-target = "36"
android-plugin = "8.12.3"

# Compose
compose-multiplatform = "1.9.1"
compose-hotreload = "1.0.0-beta03"

# Other
coroutines = "1.10.2"
ktor = "3.3.1"
kotlinx-serialization = "1.9.0"
kotlinx-datetime = "0.7.1"
okio = "3.10.2"
bignum = "0.3.10"
settings = "1.3.0"
okhttp = "5.2.1"
cryptohash = "1.0.2"

# AndroidX
appcompat = "1.7.1"
androidx-room = "2.8.3"
androidx-core = "1.17.0"
androidx-activity = "1.11.0"
androidx-startup = "1.2.0"
androidx-splash = "1.0.1"
androidx-test-runner = "1.6.2"
androidx-ui-tooling = "1.9.0"
androidx-annotations = "1.9.1"
android-permissions = "0.37.3"
lifecycle = "2.9.4"

# UI
coil = "3.3.0"
navigationCompose = "2.9.1"
kotlinStdlib = "2.2.21"
kotlinTest = "2.2.21"
core = "1.7.0"
junit = "1.1.5"

[libraries]

# Android
android-plugin = { module = "com.android.tools.build:gradle", version.ref = "android-plugin" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# Compose
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
kmp-androidx-lifecycle-common = { module = "org.jetbrains.androidx.lifecycle:lifecycle-common", version.ref = "lifecycle" }
kmp-androidx-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
kmp-androidx-annotations = { module = "androidx.annotation:annotation", version.ref = "androidx-annotations" }
# TODO add lifecycle-viewmodel-savedstate

# Crypt
cryptohash = { module = "com.appmattus.crypto:cryptohash", version.ref = "cryptohash" } # TODO replace on something else

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# KotlinX
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
#kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# Bignum
bignum = { module = "com.ionspin.kotlin:bignum", version.ref = "bignum" }

# Images
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }
coil-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

# Settings
settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }

# AndroidX
android-splash = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splash" }
android-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }
android-compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
android-sappcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
android-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
android-coreold = { module = "androidx.core:core", version.ref = "androidx-core" }
android-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "android-permissions" }
android-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
android-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
android-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
android-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-ui-tooling" }
android-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-ui-tooling" }
# DB
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "androidx-room" }
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "androidx-room" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlinStdlib" }
jetbrains-kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlinTest" }
androidx-core = { group = "androidx.test", name = "core", version.ref = "core" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit" }


[plugins]
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }

androidApplication = { id = "com.android.application", version.ref = "android-plugin" }
androidLibrary = { id = "com.android.library", version.ref = "android-plugin" }

kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
composeHotrealod = { id = "org.jetbrains.compose.hot-reload", version.prefer = "compose-hotreload" }
room = { id = "androidx.room", version.ref = "androidx-room" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
androidKotlinMultiplatformLibrary = { id = "com.android.kotlin.multiplatform.library", version.ref = "android-plugin" }
androidLint = { id = "com.android.lint", version.ref = "android-plugin" }
